---
interface CardProyectProps {
    slug: string;
    project_name: string;
    made_by: string;
    tec_use: string;
    content: string;
    images: string[];
}
const { project_name, made_by, tec_use, images } = Astro.props;
const { slug } = Astro.props;
---

<div
    class="container min-w-min max-w-fit felx flex-col object-center bg-blue-400 border-2 rounded-lg relative"
>
    <div class="justify-self-center p-2">
        <div class="slider size-32">
            {
                Array.isArray(images) &&
                    images.map((image, index) => (
                        <img src={image} alt={`Image ${index + 1}`} />
                    ))
            }
        </div>
    </div>

    <button id={`button_prev`} class="absolute top-1/2 left-0">⬅</button>

    <button id={`button_next`} class="absolute top-1/2 right-0">➡</button>

    <script>
        let slider = document.getElementsByClassName(
            "slider",
        )[0] as HTMLElement;

        let nextBtn = document.getElementById(`button_next`);
        let prevBtn = document.getElementById(`button_prev`);

        const moveToNextSlide = () => {
            slider.append(slider.querySelector("img:first-child"));
        };

        const moveToPrevSlide = () => {
            slider.prepend(slider.querySelector("img:last-child"));
        };

        nextBtn.onclick = moveToNextSlide;
        prevBtn.onclick = moveToPrevSlide;

        setInterval(moveToNextSlide, 10000);
    </script>
    <div class="place-items-start p-2">
        <h2>Project: {project_name}</h2>
        <p>By: {made_by}</p>
        <p>Tec invol: {tec_use}</p>
    </div>
</div>
